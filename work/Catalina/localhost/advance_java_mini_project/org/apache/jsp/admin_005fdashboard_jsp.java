/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-04-21 19:05:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.library.dao.BookDAO;
import com.library.bean.IssuedBook;

public final class admin_005fdashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/session_check.jsp", Long.valueOf(1745258750311L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("com.library.bean.IssuedBook");
    _jspx_imports_classes.add("com.library.dao.BookDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    String email = (String) session.getAttribute("userEmail");
    if (email == null) {
        response.sendRedirect("index.jsp");
    }

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

    BookDAO dao = new BookDAO();
    List<IssuedBook> books = dao.getAllIssuedBooks();
    java.util.Date today = new java.util.Date();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Admin Dashboard</title>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        * {\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-family: 'Roboto', sans-serif;\r\n");
      out.write("            background-color: #f3f6fd;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .sidebar {\r\n");
      out.write("            width: 250px;\r\n");
      out.write("            background-color: #5e50f9;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding-top: 30px;\r\n");
      out.write("            flex-shrink: 0;\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .sidebar h2 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .sidebar a {\r\n");
      out.write("            display: block;\r\n");
      out.write("            padding: 15px 30px;\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .sidebar a:hover {\r\n");
      out.write("            background-color: #7b68ee;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .main-content {\r\n");
      out.write("            margin-left: 250px;\r\n");
      out.write("            flex-grow: 1;\r\n");
      out.write("            padding: 20px 40px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header {\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            padding: 20px 40px;\r\n");
      out.write("            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            position: sticky;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            z-index: 1000;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header h1 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            color: #5e50f9;\r\n");
      out.write("            font-size: 28px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h2, h3 {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            background: white;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            box-shadow: 0 4px 15px rgba(0,0,0,0.05);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th, td {\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            border-bottom: 1px solid #eaeaea;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th {\r\n");
      out.write("            background-color: #5e50f9;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        tr:hover {\r\n");
      out.write("            background-color: #f2f2f2;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        footer {\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            background-color: #e9e9ff;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            border-top: 1px solid #ccc;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .nav-links {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .nav-links a {\r\n");
      out.write("            margin: 0 10px;\r\n");
      out.write("            color: #5e50f9;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .nav-links a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Stat Cards Styling */\r\n");
      out.write("        .stat-cards {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .card {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            min-width: 250px;\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            background: linear-gradient(135deg, #ffffff, #f2f2ff);\r\n");
      out.write("            box-shadow: 0 4px 12px rgba(0,0,0,0.05);\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            transition: transform 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .card:hover {\r\n");
      out.write("            transform: translateY(-5px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .card h3 {\r\n");
      out.write("            margin: 0 0 10px;\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .card p {\r\n");
      out.write("            font-size: 28px;\r\n");
      out.write("            margin: 5px 0;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .card small {\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .card.orange {\r\n");
      out.write("            background: linear-gradient(135deg, #ff6a00, #ff9472);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .card.blue {\r\n");
      out.write("            background: linear-gradient(135deg, #0072ff, #00c6ff);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .card.green {\r\n");
      out.write("            background: linear-gradient(135deg, #00b09b, #96c93d);\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"sidebar\">\r\n");
      out.write("    <h2>Admin Panel</h2>\r\n");
      out.write("    <a href=\"admin_dashboard.jsp\">Dashboard</a>\r\n");
      out.write("    <a href=\"issue_book.jsp\">Issue Book</a>\r\n");
      out.write("    <a href=\"add_book.jsp\">Add Book</a>\r\n");
      out.write("    <a href=\"reissue_requests.jsp\">Reissue Requests</a>\r\n");
      out.write("    <a href=\"return_book.jsp\">Return Book</a>\r\n");
      out.write("    <a href=\"LogoutServlet\">Logout</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"main-content\">\r\n");
      out.write("    <header>\r\n");
      out.write("        <h1>Welcome, Admin</h1>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <!-- Stat Cards -->\r\n");
      out.write("    <div class=\"stat-cards\">\r\n");
      out.write("        <div class=\"card orange\">\r\n");
      out.write("            <h3>Weekly Sales</h3>\r\n");
      out.write("            <p>$15,000</p>\r\n");
      out.write("            <small>Increased by 60%</small>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"card blue\">\r\n");
      out.write("            <h3>Weekly Orders</h3>\r\n");
      out.write("            <p>45,634</p>\r\n");
      out.write("            <small>Decreased by 10%</small>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"card green\">\r\n");
      out.write("            <h3>Visitors Online</h3>\r\n");
      out.write("            <p>95,574</p>\r\n");
      out.write("            <small>Increased by 5%</small>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <h2>All Issued Books</h2>\r\n");
      out.write("    <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>Book ID</th>\r\n");
      out.write("            <th>User Email</th>\r\n");
      out.write("            <th>Issue Date</th>\r\n");
      out.write("            <th>Due Date</th>\r\n");
      out.write("            <th>Fine</th>\r\n");
      out.write("            <th>Reissue Requested</th>\r\n");
      out.write("            <th>Status</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");

            for (IssuedBook book : books) {
                java.util.Date dueDate = book.getDueDate();
                java.util.Date returnDate = book.getReturnDate();
                double fine = book.getFine();

                if (returnDate == null && dueDate.before(today)) {
                    long diffInMillies = today.getTime() - dueDate.getTime();
                    long daysOverdue = diffInMillies / (1000 * 60 * 60 * 24);
                    fine = daysOverdue * 200;
                }
        
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>");
      out.print( book.getBookId() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( book.getUserEmail() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( book.getIssueDate() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( dueDate );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( fine );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( book.isReissueRequested() ? "Yes" : "No" );
      out.write("</td>\r\n");
      out.write("            <td>\r\n");
      out.write("                ");
 if (returnDate == null && dueDate.before(today)) { 
      out.write("\r\n");
      out.write("                    Overdue\r\n");
      out.write("                ");
 } else { 
      out.write("\r\n");
      out.write("                    OK\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"nav-links\">\r\n");
      out.write("        <a href=\"issue_book.jsp\">Issue Book</a> |\r\n");
      out.write("        <a href=\"add_book.jsp\">Add Book</a> |\r\n");
      out.write("        <a href=\"reissue_requests.jsp\">Reissue Requests</a> |\r\n");
      out.write("        <a href=\"return_book.jsp\">Return Book</a> |\r\n");
      out.write("        <a href=\"LogoutServlet\">Logout</a>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("        &copy; 2025 Library Management System â Built for smart administration\r\n");
      out.write("    </footer>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
