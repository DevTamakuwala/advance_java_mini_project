/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-04-21 19:13:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class return_005fbook_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/session_check.jsp", Long.valueOf(1745258750311L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

    String email = (String) session.getAttribute("userEmail");
    if (email == null) {
        response.sendRedirect("index.jsp");
    }

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Return Book</title>\r\n");
      out.write("    <script>\r\n");
      out.write("        let dueDate = null;\r\n");
      out.write("\r\n");
      out.write("        function fetchDueDate() {\r\n");
      out.write("            const issueId = document.getElementById(\"issueId\").value;\r\n");
      out.write("            if (!issueId) return;\r\n");
      out.write("\r\n");
      out.write("            fetch(\"GetDueDateServlet?issueId=\" + issueId)\r\n");
      out.write("                .then(response => response.text())\r\n");
      out.write("                .then(date => {\r\n");
      out.write("                    if (date !== \"notfound\") {\r\n");
      out.write("                        dueDate = new Date(date);\r\n");
      out.write("                        document.getElementById(\"dueDisplay\").innerText = \"Due Date: \" + dueDate.toDateString();\r\n");
      out.write("                        calculateFine();\r\n");
      out.write("                    } else {\r\n");
      out.write("                        document.getElementById(\"dueDisplay\").innerText = \"Issue ID not found.\";\r\n");
      out.write("                        dueDate = null;\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function calculateFine() {\r\n");
      out.write("            if (!dueDate) return;\r\n");
      out.write("\r\n");
      out.write("            const returnDateStr = document.getElementById(\"returnDate\").value;\r\n");
      out.write("            if (!returnDateStr) return;\r\n");
      out.write("\r\n");
      out.write("            const returnDate = new Date(returnDateStr);\r\n");
      out.write("            const msPerDay = 24 * 60 * 60 * 1000;\r\n");
      out.write("\r\n");
      out.write("            const diffDays = Math.floor((returnDate - dueDate) / msPerDay);\r\n");
      out.write("            const fine = diffDays > 0 ? diffDays * 200 : 0;\r\n");
      out.write("\r\n");
      out.write("            document.getElementById(\"fine\").value = fine.toFixed(2);\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-family: 'Roboto', sans-serif;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header {\r\n");
      out.write("            background-color: #007BFF;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 20px 50px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            position: sticky;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            z-index: 1000;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header h1 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            flex: 1 1 100%;\r\n");
      out.write("            font-size: 2.5rem;\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("            letter-spacing: 1px;\r\n");
      out.write("            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        nav {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        nav a {\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        nav a:hover {\r\n");
      out.write("            color: #ffd700;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .auth-buttons {\r\n");
      out.write("            margin-left: auto;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .auth-buttons a {\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            color: #007BFF;\r\n");
      out.write("            padding: 8px 16px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            border: 1px solid white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .auth-buttons a:hover {\r\n");
      out.write("            background-color: #0056b3;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .main-container {\r\n");
      out.write("            padding: 40px 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container {\r\n");
      out.write("            max-width: 600px;\r\n");
      out.write("            margin: auto;\r\n");
      out.write("            background: white;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            border-radius: 12px;\r\n");
      out.write("            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form input[type=\"text\"], form input[type=\"number\"], form input[type=\"date\"], form input[type=\"email\"] {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form input[type=\"submit\"] {\r\n");
      out.write("            padding: 8px 16px;\r\n");
      out.write("            background-color: #28a745;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form input[type=\"submit\"]:hover {\r\n");
      out.write("            background-color: #218838;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        footer {\r\n");
      out.write("            background-color: #f0f0f0;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            padding: 40px 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        footer a {\r\n");
      out.write("            color: #007BFF;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        footer a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("    <h1>Library Hub - Return Book</h1>\r\n");
      out.write("    <nav>\r\n");
      out.write("        <a href=\"index.jsp\">Home</a>\r\n");
      out.write("        <a href=\"jsp/about.jsp\">About Us</a>\r\n");
      out.write("        <a href=\"jsp/search.jsp\">Search Books</a>\r\n");
      out.write("    </nav>\r\n");
      out.write("    <div class=\"auth-buttons\">\r\n");
      out.write("        <a href=\"LogoutServlet\">Logout</a>\r\n");
      out.write("    </div>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<div class=\"main-container\">\r\n");
      out.write("    <div class=\"form-container\">\r\n");
      out.write("        <h3>Return Book</h3>\r\n");
      out.write("        <form action=\"ReturnBookServlet\" method=\"post\">\r\n");
      out.write("            Issue ID: <input type=\"number\" name=\"issueId\" id=\"issueId\" required onchange=\"fetchDueDate()\"><br>\r\n");
      out.write("            <div id=\"dueDisplay\" style=\"margin: 5px 0; color: #333;\"></div>\r\n");
      out.write("\r\n");
      out.write("            Return Date: <input type=\"date\" name=\"returnDate\" id=\"returnDate\" required onchange=\"calculateFine()\"><br>\r\n");
      out.write("            Fine (if any): <input type=\"number\" name=\"fine\" id=\"fine\" step=\"0.01\" value=\"0\"><br>\r\n");
      out.write("            <input type=\"submit\" value=\"Return Book\">\r\n");
      out.write("        </form>\r\n");
      out.write("        <a href=\"admin_dashboard.jsp\" style=\"color: #007BFF; font-weight: bold;\">Back to Dashboard</a>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("    <p>&copy; 2025 Library Management System</p>\r\n");
      out.write("    <p>Developed with ð for book lovers and knowledge seekers</p>\r\n");
      out.write("    <p>Contact us at <a href=\"mailto:support@library.com\">support@library.com</a></p>\r\n");
      out.write("    <p>Follow us on\r\n");
      out.write("        <a href=\"#\">Facebook</a> |\r\n");
      out.write("        <a href=\"#\">Twitter</a> |\r\n");
      out.write("        <a href=\"#\">Instagram</a>\r\n");
      out.write("    </p>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
